variables:
  AuthenticodeSignType: '400'
  BuildConfiguration: 'Release'
  NuGetPackagePath: '$(System.ArtifactsDirectory)/NuGetRelease'
  PackageRoot: '$(System.ArtifactsDirectory)/Packages'

stages:
- stage: Build
  displayName: Build Native Binaries
  dependsOn: []
  jobs:
  - job: BuildWin
    pool:
      name: PowerShell
      demands:
      - DotNetFramework
      - Agent.Image
    displayName: Windows
    strategy:
      matrix:
        x64:
          ARCHITECTURE: x64
        x86:
          ARCHITECTURE: x86
        x64ARM:
          ARCHITECTURE: x64_arm
        x64ARM64:
          ARCHITECTURE: x64_arm64
    steps:
    - template: windows.yml

  - job: BuildLinux
    displayName: Linux
    pool:
      vmImage: ubuntu-16.04
    strategy:
        matrix:
          UbuntuArm:
            LINUX_BUILDNAME: 'ubuntu.16.04-arm'
          CentOS:
            LINUX_BUILDNAME: 'centos.7'
          Alpine:
            LINUX_BUILDNAME: 'alpine'
          UbuntuArm64:
            LINUX_BUILDNAME: 'ubuntu.16.04-arm64'
    steps:
    - template: linux.yml

  - job: BuildMac
    displayName: Build Native Binaries on macOS
    pool: Hosted Mac Internal
    steps:
    - template: mac.yml

  - job: BuildNuGetPkg
    displayName: Build NuGet Package
    dependsOn:
    - BuildWin
    - BuildLinux
    - BuildMac
    pool:
      name: PowerShell
      demands:
      - DotNetFramework
      - Agent.Image

    steps:
    - template: nuget.yml

- stage: ReleaseAzDevOps
  displayName: Release PowerShell-Native to AzFeedRelease
  condition: and(succeeded('Build'), eq(variables['Build.Reason'], 'Manual'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))

  jobs:
  - deployment: AzFeed
    displayName: Release to AzDevops Feed
    pool:
      vmImage: windows-latest

    environment: PSNativeAzArtifactApproval
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: release

          - powershell: |
              Get-ChildItem -Recurse "$(Pipeline.Workspace)/release"
            displayName: Capture downloaded artifact

          - powershell: |
              Copy-Item "$(Pipeline.Workspace)/release/Microsoft.PowerShell.Native.*.nupkg" -Destination "$(Build.ArtifactStagingDirectory)" -Force
              Get-ChildItem "$(Build.ArtifactStagingDirectory)/Microsoft.PowerShell.Native.*.nupkg"
            displayName: 'Copy and Capture NuGet package'

          - task: NuGetCommand@2
            displayName: 'NuGet push'
            inputs:
              command: push
              packagesToPush: '$(Build.ReleaseDirectory)/Microsoft.PowerShell.Native.*.nupkg'
              nuGetFeedType: external
              publishFeedCredentials: AzArtifactsFeed

- stage: ReleaseNuGet
  displayName: Release PowerShell-Native to Nuget.org
  condition: and(succeeded('ReleaseAzDevOps'), eq(variables['Build.Reason'], 'Manual'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))

  jobs:
  - deployment: NuGet
    displayName: Release to NuGet.org
    pool:
      vmImage: windows-latest

    environment: PSNativeNuGetApproval
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: release

          - powershell: |
              Get-ChildItem -Recurse "$(Pipeline.Workspace)/release"
            displayName: Capture downloaded artifact

          - powershell: |
              Copy-Item "$(Pipeline.Workspace)/release/Microsoft.PowerShell.Native.*.nupkg" -Destination "$(Build.ArtifactStagingDirectory)" -Force
              Get-ChildItem "$(Build.ArtifactStagingDirectory)/Microsoft.PowerShell.Native.*.nupkg"
            displayName: 'Copy and Capture NuGet package'

          - task: NuGetCommand@2
            displayName: 'NuGet push'
            inputs:
              command: push
              packagesToPush: '$(Build.ReleaseDirectory)/Microsoft.PowerShell.Native.*.nupkg'
              nuGetFeedType: external
              publishFeedCredentials: PowerShellNuGetOrgPush
